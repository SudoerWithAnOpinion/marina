import type {
	Association,
	CreationOptional,
	InferAttributes,
	InferCreationAttributes,
	NonAttribute
} from 'sequelize';
import { DataTypes, Model, Sequelize } from 'sequelize';

// import JobEvent from '$models/Jobs/JobEvent';
import Job from '$models/Jobs/Job';

export default class Printer extends Model<
	InferAttributes<Printer>,
	InferCreationAttributes<Printer>
> {
	/**
	 * The ID of the printer
	 * (Optional, auto-generated by database at INSERT)
	 */
	declare printerId: CreationOptional<string>;

	/**
	 * The name of the printer
	 */
	declare name: string;

	/**
	 * Description of the printer
	 */
	declare description: string;

	/**
	 * The IP address or hostname, & port of the printer's Moonraker API
	 */
	declare address: string;

	/**
	 * Print Volume
	 */
	declare volume: string;

	// Associations
	declare jobs: NonAttribute<Job[]>;
	declare static associations: {
		jobs: Association<Printer, Job>;
	};

	// Timestamps
	declare createdAt: Date;
	declare updatedAt: Date;

}

export function init(sequelize: Sequelize) {
	Printer.init({
		printerId: {
			type: DataTypes.UUID,
			primaryKey: true,
			defaultValue: DataTypes.UUIDV4
		},
		name: {
			type: DataTypes.STRING,
			allowNull: false
		},
		description: {
			type: DataTypes.STRING,
			allowNull: false
		},
		address: {
			type: DataTypes.STRING,
			allowNull: false
		},
		volume: {
			type: DataTypes.JSON,
			allowNull: false
		},
		createdAt: {
			type: DataTypes.DATE,
			allowNull: false,
			defaultValue: DataTypes.NOW
		},
		updatedAt: {
			type: DataTypes.DATE,
			allowNull: false,
			defaultValue: DataTypes.NOW
		}
	}, {
		sequelize,
		tableName: 'printers',
		modelName: 'Printer',
		createdAt: 'createdAt',
		updatedAt: 'updatedAt'
	})
}
export function associate() {
	Printer.hasMany(Job, {
		foreignKey: 'printerId',
		as: 'jobs'
	});
}